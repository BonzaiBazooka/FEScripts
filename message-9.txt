--da pip boye 															
--commission for waffl7
--made by helkern
--Convert to FE by Melon
--Credit me and Helkern if Showcased
--Nil is pog ngl

local script = game:GetObjects("rbxassetid://10137149328")[1]
local AHB = Instance.new("BindableEvent")
	
	local FPS = 30
	
	local TimeFrame = 0
	
	local LastFrame = tick()
	local Frame = 1/FPS
	
	game:service'RunService'.Heartbeat:connect(function(s,p)
		TimeFrame = TimeFrame + s
		if(TimeFrame >= Frame)then
			for i = 1,math.floor(TimeFrame/Frame) do
				AHB:Fire()
			end
			LastFrame=tick()
			TimeFrame=TimeFrame-Frame*math.floor(TimeFrame/Frame)
		end
	end)


	function swait(dur)
		if(dur == 0 or typeof(dur) ~= 'number')then
			AHB.Event:wait()
		else
			for i = 1, dur*FPS do
				AHB.Event:wait()
			end
		end
	end

wait(1/60)	
Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,30,0)
wait(0.5)
end)
end
end
local p = game.Players.LocalPlayer
local char = p.Character
local mouse = p:GetMouse()
local larm = char["Left Arm"]
local rarm = char["Right Arm"]
local lleg = char["Left Leg"]
local rleg = char["Right Leg"]
local hed = char.Head
local torso = char.Torso
local hum = char.Humanoid
local cam = game.Workspace.CurrentCamera
local root = char.HumanoidRootPart
for i,v in pairs (char:GetChildren()) do
	if v:IsA("Accessory") then
		v.Handle.Massless = true
		v.Handle.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
	end
end

hed.Massless = true
hed.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
torso.Massless = true
torso.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
rarm.Massless = true
rarm.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
larm.Massless = true
larm.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
lleg.Massless = true
lleg.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
rleg.Massless = true
rleg.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
root.Massless = true
root.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
warn("Netless Activated!")
Bypass = "Death"
plr = game.Players.LocalPlayer
dead = false
char = plr.Character



bullet = workspace[plr.Name]["HumanoidRootPart"]
bullet.Transparency = 0
bhandle = bullet
bullet.Massless = true

mouse = plr:GetMouse()
head = char.Head
camera = workspace.CurrentCamera
lt = true
ltt = false

local function IsFirstPerson()
     return (head.CFrame.p - camera.CFrame.p).Magnitude < 1
end

     bbv = Instance.new("BodyPosition",bhandle)
     bbv.Position = char.Torso.CFrame.p
   
     
     
     mouse.Button1Down:Connect(function()
         if dead == false then
        lt = false
        ltt = false
     bbav = Instance.new("BodyAngularVelocity",bhandle)
     bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
     bbav.P = 1000000000000000000000000000
     bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)
     game:GetService("Debris"):AddItem(bbav,0.1)
        if game.Players:GetPlayerFromCharacter(mouse.Target.Parent) then
            if mouse.Target.Parent.Name == char.Name or mouse.Target.Parent.Name == "non" then return end
              --repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bbv.Position = (CFrame.new(mouse.Target.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            bhandle.Position = (CFrame.new(mouse.Target.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            wait(1)
            --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        elseif game.Players:GetPlayerFromCharacter(mouse.Target.Parent.Parent) then
            if mouse.Target.Parent.Name == char.Name or mouse.Target.Parent.Name == "non" then return end
            --repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bbv.Position = (CFrame.new(mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            bhandle.Position = (CFrame.new(mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            wait(1)
            --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
            
            else
       -- repeat 
        game:GetService("RunService").RenderStepped:Wait()
        wait(1)
        --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        end
        wait()
        lt = true
         end
         end)
         
    spawn(
        function()
            while true do
                game:GetService("RunService").Heartbeat:Wait()
                bullet.Velocity = Vector3.new(0,26,0)
         end
    end)

 plr:GetMouse().Button1Down:Connect(function()
attackingwithhrp = true	
end)

 
plr:GetMouse().Button1Up:Connect(function()
attackingwithhrp = false
end)

plr:GetMouse().Button1Down:Connect(function()
repeat wait() until attackingwithhrp == true
repeat
game:GetService("RunService").Heartbeat:Wait()
if plr:GetMouse().Target ~= nil then
bullet.Position = game:GetService("Players").LocalPlayer:GetMouse().Hit.p
end
until attackingwithhrp == false
end)

player = game:GetService("Players").LocalPlayer
mouse = player:GetMouse()
character = Workspace.non
playergui = player.PlayerGui

humanoid = character.Humanoid
rootpart = character.HumanoidRootPart
head = character.Head
torso = character.Torso
rightarm = character["Right Arm"]
leftarm = character["Left Arm"]
rightleg = character["Right Leg"]
leftleg = character["Left Leg"]

rootjoint = rootpart.RootJoint
neck = torso.Neck
rightshoulder = torso["Right Shoulder"]
leftshoulder = torso["Left Shoulder"]
righthip = torso["Right Hip"]
lefthip = torso["Left Hip"]


song = Instance.new("Sound",torso)

cf = CFrame.new
d = cf(0,0,0)
vt = Vector3.new
random = math.random
cos = math.cos
sin = math.sin
rad = math.rad
angles = CFrame.Angles

tweenservice = game:GetService("TweenService")
debris = game:GetService("Debris")

sine = 0
mousehold,keyhold = false,false
rooted = false
attack = false
rootc0 = cf(0, 0, 0) * angles(rad(-90), rad(0), rad(180))
neckc0 = cf(0, 1, 0) * angles(rad(-90), rad(0), rad(180))
change = 1
effects = Instance.new("Folder",character)
effects.Name = "effects lol"
if humanoid.Animator then humanoid.Animator:Destroy() end
anim = "idle"

ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "ArtificialHB"
script:WaitForChild("ArtificialHB")
frame = 1/60
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.ArtificialHB:Fire()
game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.ArtificialHB:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				script.ArtificialHB:Fire()
			end
		lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)


function Swait(n)
	if n == 0 or n == nil then
		ArtificialHB.Event:wait()
	else
		for i = 1, n do
			ArtificialHB.Event:wait()
		end
	end
end

function part(parent, mat, transp, color, size, anchored, shape)
	local p = Instance.new("Part")
	p.Transparency = transp
	p.CanCollide = false
	p.Locked = true
	if not type(anchored) == "boolean" then
	p.Anchored = true	
	end
	p.Anchored = anchored
	p.Color = color
	p.Size = size
	p.Position = rootpart.Position
	p.Material = mat
	p.Parent = parent
	if shape then
	if shape == "ball" then
	local m = Instance.new("SpecialMesh",p)
	m.MeshType = "Sphere"	
	end	
	end
	return p
end

function weldBetween(a, b)
	    local weldd = Instance.new("ManualWeld")
	    weldd.Part0 = a
	    weldd.Part1 = b
	    weldd.C0 = CFrame.new()
	    weldd.C1 = b.CFrame:inverse() * a.CFrame
	    weldd.Parent = a
	    return weldd
end

function weld(parent, part0, part1, c0, c1)
	local w = Instance.new("Weld")
	w.Part0 = part0
	w.Part1 = part1
	w.C0 = c0
	w.C1 = c1
	w.Parent = parent
	return w
end

function sound(id, parent, vol, pitch)
		local so = Instance.new("Sound")
		so.EmitterSize = 5*vol
		so.Parent = parent
		so.Volume = vol
		so.Pitch = pitch
		so.SoundId = "rbxassetid://"..id
		so:Play()
	return so
end

function Tween(obj,prop,easing,easingdir,timer)
local easin = Enum.EasingStyle[easing]
local easindir = Enum.EasingDirection[easingdir]
local tweeninf = TweenInfo.new(
	timer/1,	
	easin,
	easindir,
	0,
	false,
	0
)
local props = prop
local tweenanim = tweenservice:Create(obj,tweeninf,props)
tweenanim:Play()
end

function raycast(pos, dir, range, ignore)
	return workspace:FindPartOnRay(Ray.new(pos, dir.unit * range), ignore)
end

function castray(start, endp, dist, ignore)
	local dir = cf(start,endp).lookVector
	return raycast(start, dir, dist, ignore)
end

function Effect(tblee)
	coroutine.resume(coroutine.create(function()
		local origpos = (tblee.cf or nil)
		local moveto = (tblee.moveto or nil)
		local color = (tblee.clr or Color3.new(0,0,0))
		local color2 = (tblee.clr2 or nil)
		local defaultsize = (tblee.size or vt(2,2,2))
		local material = (tblee.mat or "Neon")
		local locker = (tblee.lock or false)
		local rotateX = (tblee.radX or 0)
		local rotateY = (tblee.radY or 0)
		local rotateZ = (tblee.radZ or 0)
		local secondsize = (tblee.size2 or vt(4,4,4))
		local acttime = (tblee.waits or 100)
		local transpar = (tblee.tran or 0)
		local transpar2 = (tblee.tran2 or 1)
		local typeofmesh = (tblee.mtype or "S")
		local movingspeed = nil
		local mesh = nil
		if typeof(origpos) == "Vector3"then origpos=cf(origpos) end 
		if typeof(moveto) == "CFrame"then moveto=moveto.p end 
		if typeof(color) == "BrickColor"then color=color.Color end 
		if typeof(color2) == "BrickColor"then color2=color2.Color end
		if origpos then
		local p=Instance.new("Part",effects)p.Anchored=true p.CanCollide=false p.Color=color p.CFrame=origpos p.Material=material p.Size=Vector3.new(1,1,1)p.CanCollide=false p.Transparency=transpar p.CastShadow=false p.Locked=true
		if typeofmesh == "Box" or typeofmesh == "B" or typeofmesh == "1" then
			mesh=Instance.new("BlockMesh",p)mesh.Scale=defaultsize
		elseif typeofmesh == "Sphere" or typeofmesh == "S" or typeofmesh == "2" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="Sphere"mesh.Scale=defaultsize
		elseif typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="Cylinder"mesh.Scale=defaultsize
		elseif typeofmesh == "Slash" or typeofmesh == "SL" or typeofmesh == "4" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="FileMesh"mesh.MeshId="rbxassetid://662585058"mesh.Scale = vt(defaultsize.X/10,0,defaultsize.X/10)
		elseif typeofmesh == "Wave" or typeofmesh == "W" or typeofmesh == "5" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="FileMesh"mesh.MeshId="rbxassetid://20329976"mesh.Scale = vt(0,0,-defaultsize.X/8)
		end
		if locker == true then
			p.Position = origpos.p
			if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
				p.CFrame = cf(p.Position,moveto)*cf(0,0,-(p.Size.Z/1.5))*angles(0,rad(90),0)
			else
				p.CFrame = cf(p.Position,moveto)*cf(0,0,-(p.Size.Z/1.5))
			end
		else
			if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
				p.CFrame = origpos*CFrame.Angles(0,math.rad(90),0)
			else
				p.CFrame = origpos
			end
		end
		if color2 then
		Tween(p,{Color = color2},"Linear","In",acttime/60)
		end	
		if mesh then
			if  moveto then
				movingspeed=(origpos.p - moveto).Magnitude/acttime
			end
			local endsize=(defaultsize - secondsize)
			local endtranpar=transpar-transpar2
			for i = 1, acttime+1 do Swait()
				mesh.Scale=mesh.Scale-endsize/acttime
				p.Transparency = p.Transparency - endtranpar/acttime
				p.CFrame=p.CFrame*CFrame.Angles(math.rad(rotateX),math.rad(rotateY),math.rad(rotateZ))
				if moveto ~= nil then
					local a = p.Orientation
					if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
						p.CFrame = CFrame.new(p.Position,moveto)*CFrame.new(0,0,-movingspeed)*CFrame.Angles(0,math.rad(90),0)
					else
						p.CFrame = CFrame.new(p.Position,moveto)*CFrame.new(0,0,-movingspeed)
					end
					p.Orientation = a
				end
			end
			p:Destroy()
		end
		elseif origpos == nil then
		warn("Origpos is nil!")
		end
	end))
end

function attcf(p)
	return p.Parent.CFrame*cf(p.Position)
end

function randomangle()
	return angles(rad(random(1,360)),rad(random(1,360)),rad(random(1,360)))
end

function randompos(num,typ)
	if typ == "vt" or not typ then
		return vt(random(-num,num),random(-num,num),random(-num,num))
	elseif typ == "cf" then
		return cf(random(-num,num),random(-num,num),random(-num,num))
	end
end

function unanchor(model)
	for _,v in pairs(model:GetDescendants()) do
		if v:IsA("BasePart") then
			if not v.Anchored == false then v.Anchored = false end
		end
	end
end

function deathfunction(model)
	model:BreakJoints()
	for _, c in pairs(model:GetChildren()) do
		if c:IsA("BasePart") and c.Name ~= "HumanoidRootPart" then
			if c.Name == "Head" then
				
				elseif c.Name ~= "HumanoidRootPart" then
					
			end
		end
	end
	debris:AddItem(model,6)
end

function applydamage(humanoid,damage)
end

function aoe(pos,range,min,max,fling,instakill,knock)
end



songid = 0
speed = 16

for _,v in next, humanoid:GetPlayingAnimationTracks() do
	 v:Stop();
end
character.Animate.Parent = nil

local la = Instance.new("Weld")
local ra = Instance.new("Weld")
rightshoulder.Parent = nil
leftshoulder.Parent = nil
ra.Name = "ra"
ra.Part0 = torso 
ra.C0 = cf(1.5, 0.5, 0)
ra.C1 = cf(0, 0.5, 0)
ra.Part1 = rightarm
ra.Parent = torso  

la.Name = "la"
la.Part0 = torso 
la.C0 = cf(-1.5, 0.5, 0)
la.C1 = cf(0, 0.5, 0) 
la.Part1 = leftarm
la.Parent = torso

local lh = weld(leftleg,torso,leftleg,cf(-.5,-1,0),d)
lh.C1 = cf(0,1,0)
local rh = weld(rightleg,torso,rightleg,cf(.5,-1,0),d)
rh.C1 = cf(0,1,0)

gunactive = false
armoractive = false

pipboy = script.pip
pipscreen = pipboy.UI.SurfaceGui.ImageLabel
trsp = {0,.2,.1,.24,.1,0,.26,.06,.18,0}
pipweld = weld(pipboy.Middle,pipboy.Middle,rightarm,d*angles(0,rad(180),0),d)
unanchor(pipboy)
pistol = script.pistol
eqp = pistol.equipped
eqpweld = weld(eqp,eqp,leftarm,d,d)
eqp.Anchored = false
eqp.Parent = nil
uneqp = pistol.unequipped
pw = weld(uneqp,uneqp,leftleg,d,d)
pistweld = pistol.joint2.mw
unanchor(pistol)
minigun = script.minigun
barrelweld = minigun.barrel.joint2.mw
mnw = weld(minigun.main,minigun.main,leftarm,d*angles(0,rad(180),0),d)
unanchor(minigun)
armor = script.MAN
fh,ft,fra,fla,frl,fll = weld(armor.hed.Middle,armor.hed.Middle,head,d,d),weld(armor.tors,armor.tors.Middle,torso,d,d),weld(armor.ra,armor.ra.Middle,rightarm,d,d),weld(armor.la,armor.la.Middle,leftarm,d,d),weld(armor.rl,armor.rl.Middle,rightleg,d,d),weld(armor.ll,armor.ll.Middle,leftleg,d,d)
unanchor(armor)
armor.Parent,minigun.Parent,pistol.Parent,pipboy.Parent = nil,nil,character,character
ammo = 8
accs = {}
minij = minigun.gunmodel.joint2.Weld
rev = minigun.barrel.joint2.mw
for _,v in pairs(character:GetChildren()) do
	if v:IsA("Accessory") then
		table.insert(accs,v)
	end
end

function cs()
	if songid == 0 then
		songid = 1
	elseif song == 1 then
		songid = 2
	end
end

function equipgun()
	attack = true
	if gunactive == false then
		gunactive = true
	local Time,Easing,Direction = .35,'Quad','InOut'
  	Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(0),rad(5.5),rad(0))*rootc0},Easing,Direction,Time)
  	Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  	Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.9),rad(-9.7),rad(3))},Easing,Direction,Time)
  	Tween(la,{C0 = cf(-1.5,0.1,0.1)*angles(rad(3.1),rad(5.3),rad(4.2))},Easing,Direction,Time)
  	Tween(ra,{C0 = cf(1.4,0.5,0.1)*angles(rad(8),rad(-8.8),rad(6.8))},Easing,Direction,Time)
  	Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-5.5))},Easing,Direction,Time)
 	swait(Time)
	eqp.Parent,uneqp.Parent = pistol,nil
	Tween(pistweld,{C0 = d*angles(rad(-8),0,0)},Easing,Direction,.25)
	elseif gunactive == true then
		gunactive = false
	local Time,Easing,Direction = .35,'Quad','InOut'
  	Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(0),rad(5.5),rad(0))*rootc0},Easing,Direction,Time)
  	Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  	Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.9),rad(-9.7),rad(3))},Easing,Direction,Time)
  	Tween(la,{C0 = cf(-1.5,0.1,0.1)*angles(rad(3.1),rad(5.3),rad(4.2))},Easing,Direction,Time)
  	Tween(ra,{C0 = cf(1.4,0.5,0.1)*angles(rad(8),rad(-8.8),rad(6.8))},Easing,Direction,Time)
  	Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-5.5))},Easing,Direction,Time)
 	swait(Time)
	eqp.Parent,uneqp.Parent = nil,character
	Tween(pistweld,{C0 = d*angles(rad(-16),0,0)},Easing,Direction,.25)
	end
	attack = false
end

function shoot()
	attack = true
	repeat 
	local Time,Easing,Direction = .3,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(0,0,0.1)*angles(rad(-7.9),rad(-39.6),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.9,-0.9,-0.6)*angles(rad(5.2),rad(40.7),rad(-5.5))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.4,-1,-0.2)*angles(rad(4.3),rad(-9.8),rad(-2.1))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.7,0.6,-0.3)*angles(rad(89.4),rad(-12.7),rad(-44.8))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.5,0.4,0.2)*angles(rad(2.9),rad(-23.5),rad(23.2))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,-0.1)*angles(rad(4.9),rad(-0.1),rad(39.5))},Easing,Direction,Time)
Tween(pistweld,{C0 = d*angles(rad(6),0,0)},Easing,Direction,Time)
  swait(Time)
	if ammo == 0 then sound(484110242,pistol.Hole,5,1) break  end
  	local Time,Easing,Direction = .15,'Linear','InOut'
  Tween(rootjoint,{C0 = cf(0,0,0.1)*angles(rad(4.8),rad(-39.6),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.8,-1,-0.5)*angles(rad(-11.5),rad(40.2),rad(5.2))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-0.9,-0.1)*angles(rad(-4.1),rad(-9.8),rad(6.1))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.8,0.8,-0.4)*angles(rad(119.3),rad(-35.1),rad(-32.2))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.5,0.4,0.2)*angles(rad(2.9),rad(-23.5),rad(23.2))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(3.3),rad(1.2),rad(39.7))},Easing,Direction,Time)
	Tween(pistol.Bolt.joint2.mw,{C0 = cf(0,0,.38)},"Back","Out",.1)
	Tween(pistol.thing.joint2.mw,{C0 = cf(0,0,0)*angles(rad(-90),0,0)},"Quad","Out",.1)
	delay(.2,function()
		Tween(pistol.thing.joint2.mw,{C0 = cf(0,0,0)*angles(rad(0),0,0)},"Quad","Out",.1)
	Tween(pistol.Bolt.joint2.mw,{C0 = cf(0,0,0)},"Linear","Out",.1)
	end)
ammo = ammo - 1
sound(131415599,pistol.Hole,4,1)
local bulletf = part(workspace,"Metal",0,BrickColor.new("Gold").Color,vt(.2,.1,.1),false,"ball")
bulletf.CanCollide = true
bulletf.CFrame = pistol.db.CFrame
bulletf.Velocity = vt(-random(50,100)/10,random(150,200)/10,0)
local h,p = castray(pistol.Hole.Position,mouse.Hit.p, 500,character)
local di = (p - pistol.Hole.Position).Magnitude
Effect({cf=cf(pistol.Hole.Position,p)*cf(0,0,-di/2),moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=10,size=Vector3.new(.05,.05,di),size2=Vector3.new(.1,.1,di),radX=0,radY=0,radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
Effect({cf=pistol.Hole.Position,moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=15,size=Vector3.new(.1,.1,.1),size2=Vector3.new(.3,.3,.3),radX=random(-8,8),radY=random(-8,8),radZ=random(-8,8),mat="Neon",lock=false,tran=0,tran2=1})
if h then
	if h.Parent:FindFirstChildOfClass("Humanoid") then
		applydamage(h.Parent:FindFirstChildOfClass("Humanoid"),random(25,30))
		local bl = part(h,"Granite",0,BrickColor.new("Crimson").Color,vt(.2,.2,.2),false,"ball")
		bl.Position = p
		weldBetween(bl,h)
		Tween(bl,{Transparency = 1},"Linear","In",1)
		debris:AddItem(bl,1.01)
		sound(1565725028,bl,6,random(9,12)/10)
	end
end
delay(1,function()
Tween(bulletf,{Transparency = 1},"Linear","In",.75)
debris:AddItem(bulletf,.76)	
end)
  swait(Time)
	local Time,Easing,Direction = .15,'Linear','Out'
  Tween(rootjoint,{C0 = cf(0,0,0.1)*angles(rad(-7.9),rad(-39.6),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.9,-0.9,-0.6)*angles(rad(5.2),rad(40.7),rad(-5.5))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.4,-1,-0.2)*angles(rad(4.3),rad(-9.8),rad(-2.1))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.7,0.6,-0.3)*angles(rad(89.4),rad(-12.7),rad(-44.8))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.5,0.4,0.2)*angles(rad(2.9),rad(-23.5),rad(23.2))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,-0.1)*angles(rad(-4.9),rad(-0.1),rad(39.5))},Easing,Direction,Time)
  swait(Time)
until mousehold == false or ammo == 0
	attack = false
end

function reload()
	attack = true
	 local Time,Easing,Direction = .5,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(0),rad(13.3),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.9),rad(-9.7),rad(3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.1,0.3,-0.9)*angles(rad(97.6),rad(7.2),rad(59.6))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.4,0.1)*angles(rad(8.9),rad(-10.8),rad(-6.9))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(-6.3),rad(1.7),rad(-3.4))},Easing,Direction,Time)
sound(1181037138,pistol.Mag,5,1)
local dbmag = part(workspace,"Metal",0,BrickColor.new("Black").Color,vt(0.484/2,0.092,0.863/1.5),false)
dbmag.CanCollide = true
dbmag.CFrame = pistol.Mag.CFrame
delay(1,function()
Tween(dbmag,{Transparency = 1},"Linear","In",1)
debris:AddItem(dbmag,1.01)
end)
  swait(Time)
  local Time,Easing,Direction = .25,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(0.1,0,0)*angles(rad(0),rad(23.8),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.6),rad(-15.1),rad(3.1))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.1,0.2,-0.9)*angles(rad(94.2),rad(23.8),rad(57.8))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.3,0.6,-0.5)*angles(rad(79),rad(8.5),rad(-36.8))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(-6.5),rad(0.6),rad(-13.8))},Easing,Direction,Time)
sound(1181036709,pistol.Mag,5,1)
  swait(Time)
ammo = 8
	attack = false
end

function equipMAN()
	attack = true
	local active = false
	if armoractive == false and active == false then
	rootpart.Anchored = true
	active = true
	for _,v in pairs(minigun:GetDescendants()) do if v:IsA("BasePart") and v.Name ~= "main" and v.Name ~= "Hole" then v.Transparency = 1 end end
	local ff1 = part(effects,"ForceField",1,Color3.new(0,1,0),vt(6,8.35,6)/6,true)
	local ff2 = part(effects,"Glass",1,Color3.new(0,1,0),vt(6,8.35,6)/7.25,true)
	ff1.CFrame,ff2.CFrame = torso.CFrame,torso.CFrame
	Tween(ff1,{Size = vt(7,9.35,7),Transparency = 0},"Quad","InOut",1)
	Tween(ff2,{Size = vt(7,9.35,7)/1.25,Transparency = 0},"Quad","InOut",1)
	swait(1)
	armor.Parent = character
	pistol.Parent = nil
	pipboy.Parent = nil
	for _,c in pairs(accs) do c.Parent = nil end
	Tween(ff1,{Size = vt(7,9.35,7)/7,Transparency = 1},"Back","In",1)
	Tween(ff2,{Size = vt(7,9.35,7)/8.25,Transparency = 1},"Back","In",1)
	debris:AddItem(ff1,1.01)
	debris:AddItem(ff2,1.01)
	active = false
	armoractive = true
	rootpart.Anchored = false
	for _,v in pairs(minigun:GetDescendants()) do if v:IsA("BasePart") and v.Name ~= "main" and v.Name ~= "Hole" then
	Tween(v,{Transparency = 0},"Linear","In",.5)	
	end
	end
	delay(.5, function()
	minigun.Parent = character	
	end)
	elseif armoractive == true and active == false then
	active = true
	rootpart.Anchored = true
	local ff1 = part(effects,"ForceField",1,Color3.new(0,1,0),vt(6,8.35,6)/6,true)
	local ff2 = part(effects,"Glass",1,Color3.new(0,1,0),vt(6,8.35,6)/7.25,true)
	ff1.CFrame,ff2.CFrame = torso.CFrame,torso.CFrame
	Tween(ff1,{Size = vt(7,9.35,7),Transparency = 0},"Quad","InOut",1)
	Tween(ff2,{Size = vt(7,9.35,7)/1.25,Transparency = 0},"Quad","InOut",1)
	swait(1)
	armor.Parent = nil
	pistol.Parent = character
	pipboy.Parent = character
	for _,v in pairs(minigun:GetDescendants()) do if v:IsA("BasePart") and v.Name ~= "main" then
	Tween(v,{Transparency = 1},"Linear","In",.5)	
	end
	end
	delay(.5,function()
	minigun.Parent = nil	
	end)
	for _,c in pairs(accs) do c.Parent = character end
	Tween(ff1,{Size = vt(7,9.35,7)/6,Transparency = 1},"Back","In",1)
	Tween(ff2,{Size = vt(7,9.35,7)/7.25,Transparency = 1},"Back","In",1)
	debris:AddItem(ff1,1.01)
	debris:AddItem(ff2,1.01)
	active = false
	rootpart.Anchored = false
	armoractive = false
	end
	attack = false
end

function MINIGUNNNNNNNNN()
	attack = true
	local spin = 0
	local canshoot = false
	rootpart.Anchored = true
	sound(2028326725,minigun.gunmodel.Hole,5,1)
	local shot = sound(260454510,minigun.gunmodel.Hole,5,1)
	shot.Looped = true
	shot:Stop()
	repeat
	Swait()
	spin = spin + .2
	local stupidmath = 1*(1+(75/100))^spin
	if spin >= 10 then canshoot = true end
	if  canshoot == false then barrelweld.C0 = cf(0,0,0)*angles(0,rad(0),rad(stupidmath)) end
	  		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0+.07*cos(sine/35),0)*angles(rad(0),rad(60.1),rad(0))*rootc0,.1)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1-.07*cos(sine/35),-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4)),.1)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.07*cos(sine/35),-0.2)*angles(rad(-0.9),rad(-9.7),rad(3)),.1)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(2*sin(sine/35)),rad(-3*cos(sine/70)),rad(-60.1)),.1)	
if canshoot == false then
	 		la.C0 = la.C0:lerp(cf(-1.6,0.4+.085*sin(sine/35),-0.4)*angles(rad(28.7),rad(-36),rad(14.2)),.1)
  		ra.C0 = ra.C0:lerp(cf(1,0.4+.085*sin(sine/35),-0.9)*angles(rad(65),rad(16.2),rad(-49.4)),.1)
end
	if canshoot == true then
			shot.Playing = true
	barrelweld.C0 = cf(0,0,0)*angles(0,rad(0),rad(sine*17))
	 		la.C0 = la.C0:lerp(cf(-1.6,0.4,-0.4+.2*cos(sine/1))*angles(rad(28.7),rad(-36),rad(14.2)),.1)
  		ra.C0 = ra.C0:lerp(cf(1,0.4,-0.9+.2*cos(sine/1))*angles(rad(65),rad(16.2),rad(-49.4)),.1)
local h,p = castray(minigun.gunmodel.Hole.Position,mouse.Hit*randompos(3,"cf").p, 500,character)
local dist = (p-minigun.gunmodel.Hole.Position).Magnitude
Effect({cf=cf(minigun.gunmodel.Hole.Position,p)*cf(0,0,-dist/2),moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.8,.8,0),mtype="Box",waits=10,size=Vector3.new(.1,.1,dist),size2=Vector3.new(.155,.155,dist),radX=0,radY=0,radZ=random(-10,10),mat="Neon",lock=false,tran=0,tran2=1})
if h then
	if h.Parent:FindFirstChildOfClass("Humanoid") then
		applydamage(h.Parent:FindFirstChildOfClass("Humanoid"),random(30,50))
		local bl = part(h,"Granite",0,BrickColor.new("Crimson").Color,vt(.2,.2,.2),false,"ball")
		bl.Position = p
		weldBetween(bl,h)
		Tween(bl,{Transparency = 1},"Linear","In",1)
		debris:AddItem(bl,1.01)
		sound(1565725028,bl,6,random(9,12)/10)
	end
end
	end
	until mousehold == false
	rootpart.Anchored = false
	shot:Destroy()
	sound(4498806901,minigun.gunmodel.Hole,5,1)
	attack = false
end

mouse.Button1Down:Connect(function()
	mousehold = true
	if attack == false and gunactive == true then
		shoot()
	elseif attack == false and armoractive == true then
		MINIGUNNNNNNNNN()
	end
end)

mouse.Button1Up:Connect(function()
	mousehold = false
end)

mouse.KeyDown:Connect(function(k)
	keyhold = true
	if k == "q" and attack == false and armoractive == false then
		equipgun()
	end
	
	if k == "r" and attack == false and gunactive == true then
		reload()
	end
	
	if k == "e" and attack == false and gunactive == false then
		equipMAN()
	end
		
			
	if k == "z" and attack == false then
		
	end
	
	if k == "x" and attack == false then
		
	end
	if k == "c" and attack == false then
		
	end
	
	if k == "v" and attack == false then
		
	end
	
	if k == "b" and attack == false then
		
	end
	
	if k == "m" and attack == false then cs() end
end)

mouse.KeyUp:Connect(function(k)
	keyhold = false
end)
cycl = 1
while true do
	Swait()
	sine = sine + change
	local torsoverticalvel = rootpart.Velocity.Y
	local torsovel = (rootpart.Velocity * vt(1, 0, 1)).Magnitude
	local hitfloor,hitpos,normal = raycast(rootpart.Position,(cf(rootpart.Position, rootpart.Position+vt(0,-1,0))).lookVector,4+humanoid.HipHeight,character)
	local speedval = 10/(humanoid.WalkSpeed/16)
	local Walking = humanoid.MoveDirection.magnitude>0
	local FwdDir = (Walking and humanoid.MoveDirection*rootpart.CFrame.lookVector or vt())
	local RigDir = (Walking and humanoid.MoveDirection*rootpart.CFrame.rightVector or vt())
	local Vec = {
		X=RigDir.X+RigDir.Z,
		Z=FwdDir.X+FwdDir.Z
	};
	local Divide = 1
	if(Vec.Z<0)then
		Divide=math.clamp(-(1.25*Vec.Z),1,2)
	end
	Vec.Z = Vec.Z/Divide
	Vec.X = Vec.X/Divide
	if torsoverticalvel > 1 and not hitfloor then
		anim = "jump"
		if attack == false then
		local Alpha = .2
  		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0,0)*angles(rad(15.2),rad(0),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1.1,0)*angles(rad(-21),rad(0),rad(0)),Alpha)
 		rh.C0 = rh.C0:lerp(cf(0.5,-0.4,-1)*angles(rad(-18.6),rad(0),rad(0)),Alpha)
  		la.C0 = la.C0:lerp(cf(-1.5,0.5,0.2)*angles(rad(-9.7),rad(8.3),rad(-8.1)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.5,0.5,0.2)*angles(rad(-9.7),rad(-8.3),rad(8.1)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-9.6),rad(0),rad(0)),Alpha)
		end
	elseif torsoverticalvel < -1 and not hitfloor then
		anim = "fall"
		local Alpha = .2
		if attack == false then
 		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0,-0.1)*angles(rad(-16.1),rad(0),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1,-0.3)*angles(rad(-12.5),rad(0),rad(0)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-0.2,-1.1)*angles(rad(-16),rad(0),rad(0)),Alpha)
 		la.C0 = la.C0:lerp(cf(-1.4,0.4,0.1)*angles(rad(35.1),rad(11.2),rad(-39.1)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.4,0.4,0.1)*angles(rad(35.5),rad(-15.8),rad(40.7)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-5),rad(0),rad(0)),Alpha)
		end
	elseif torsovel < 1 and hitfloor then
		anim = "idle"
		local Alpha = .1
		if attack == false then
		if armoractive == false then
 		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0+.07*cos(sine/27),0)*angles(rad(2-2*sin(sine/27)),rad(13.3),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1-.07*cos(sine/27),-0.1)*angles(rad(1.4+(2*1.25)*sin(sine/27)),rad(5.6),rad(-2.4)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.07*cos(sine/27),-0.2)*angles(rad(-0.9+(2*1.25)*sin(sine/27)),rad(-9.7),rad(3)),Alpha)
  		la.C0 = la.C0:lerp(cf(-1.5,0.5+.085*sin(sine/27),0.1)*angles(rad(5.5+1.75*cos(sine/27)),rad(12.5),rad(-3.7+3*cos(sine/27))),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.4,0.5+.085*sin(sine/27),0.1)*angles(rad(8+1.75*cos(sine/27)),rad(-8.8),rad(6.8-4*cos(sine/27))),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(2*sin(sine/27)),rad(-3*cos(sine/(27*2))),rad(-13.3)),Alpha)
		else
  		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0+.07*cos(sine/35),0)*angles(rad(0),rad(60.1),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1-.07*cos(sine/35),-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.07*cos(sine/35),-0.2)*angles(rad(-0.9),rad(-9.7),rad(3)),Alpha)
 		la.C0 = la.C0:lerp(cf(-1.6,0.4+.085*sin(sine/35),-0.4)*angles(rad(28.7),rad(-36),rad(14.2)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1,0.4+.085*sin(sine/35),-0.9)*angles(rad(65),rad(16.2),rad(-49.4)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(2*sin(sine/35)),rad(-3*cos(sine/70)),rad(-60.1)),Alpha)	
		minij.C0 = minij.C0:lerp(cf(0,.3,-.4)*angles(rad(5),rad(-36/2),0),.1)
		end
		end
	elseif torsovel > 1 and hitfloor then
		anim = "walk"
		local Alpha = .1
		rootjoint.C0 = rootjoint.C0:lerp(cf(0,.14-.07*cos(sine/speedval*2),0)*angles(rad(-15*Vec.Z),rad(5*cos(sine/speedval)),rad(-12.5*Vec.X))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1+.18*sin(sine/speedval),-.1+.12*sin(sine/speedval)*Vec.Z)*angles(rad(-40*cos(sine/speedval)*Vec.Z),rad(2*cos(sine/speedval)),rad(-20*cos(sine/speedval)*Vec.X)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.18*sin(sine/speedval),-.1-.12*sin(sine/speedval)*Vec.Z)*angles(rad(40*cos(sine/speedval)*Vec.Z),rad(-2*cos(sine/speedval)),rad(20*cos(sine/speedval)*Vec.X)),Alpha)
   		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-2),rad(0),rad(-5*cos(sine/speedval)-26*Vec.X)),Alpha)
		if armoractive == true then
		la.C0 = la.C0:lerp(cf(-1.6,0.4+.085*sin(sine/35),-0.4)*angles(rad(28.7),rad(-36),rad(14.2)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1,0.4+.085*sin(sine/35),-0.9)*angles(rad(65),rad(16.2),rad(-49.4)),Alpha)
		else
		la.C0 = la.C0:lerp(cf(-1.5,0.5,-.065*cos(sine/speedval))*angles(rad(30*cos(sine/speedval)*Vec.Z),rad(0),rad(0)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.5,0.5,.065*cos(sine/speedval))*angles(rad(-30*cos(sine/speedval)*Vec.Z),rad(0),rad(0)),Alpha)
		end	
	end
	cycl = cycl + 1
	if cycl >= #trsp then cycl = 1 end
	if random(1,2) == 1 then
	pipscreen.ImageTransparency = trsp[cycl]	
	end
	song.SoundId,song.Looped,song.Pitch,song.Volume,song.Playing = "rbxassetid://"..songid,true,1,3,true
	humanoid.Health,humanoid.MaxHealth,humanoid.WalkSpeed = 9e9,9e9,speed
end
